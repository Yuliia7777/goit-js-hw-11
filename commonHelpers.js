import{S as m,i}from"./assets/vendor-8c59ed88.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const o of t.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&r(o)}).observe(document,{childList:!0,subtree:!0});function l(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function r(e){if(e.ep)return;e.ep=!0;const t=l(e);fetch(e.href,t)}})();const u=async a=>{console.log(`pixabay:search=>[${a}]`);const s="https://pixabay.com/api/",r={key:"43273309-00e3b6b60594751f75d0d2555",q:a,image_type:"photo",orientation:"horizontal",safesearch:!0},e=new URLSearchParams(r).toString();console.log("queryParams:",r);const t=`${s}?${e}`,o={method:"GET"};try{return await(await fetch(t,o)).json()}catch(n){throw console.error("p:Error fetching images:",n),n}finally{console.log("pixabay:search.end;")}},c=a=>{const s=document.getElementById("gallery");if(s.innerHTML="",a.length===0)return;let l=a.map(r=>`
            <li class="gallery-item">
                <a class="gallery-link" href="${r.largeImageURL}">
                    <img class="gallery-image" src="${r.webformatURL}" alt="${r.tags}" />
                </a>
                <ul class="item-info">
                    <li><h3 class="item-title">Likes</h3>    <p class="item-text">${r.likes}</p>
                    <li><h3 class="item-title">Views</h3>    <p class="item-text">${r.views}</p>
                    <li><h3 class="item-title">Comments</h3> <p class="item-text">${r.comments}</p>
                    <li><h3 class="item-title">Downloads</h3><p class="item-text">${r.downloads}</p>
                </ul>
            </li>
        `).join("");s.innerHTML=`<ul class="gallery">${l}</ul>`,new m(".gallery a",{captionsData:"alt",captionDelay:250})};{const a=document.getElementById("searchForm"),s=document.getElementById("searchInput"),l=document.getElementById("loader");l.style.display="none",a.addEventListener("submit",async r=>{r.preventDefault();const e=s.value.trim();if(e===""){let t="Please enter a search term.";i.error({title:"Error:",message:t,position:"topRight"});return}l.style.display="block";try{let t=await u(e);console.log("m:data",t);const o=t.hits;if(console.log("m:hits:",o),s.value="",o.length===0){c(o),i.error({message:`main: Sorry, there are no images matching your search query: [${e}]. Please try again!`});return}c(o)}catch(t){console.error("Error fetching images:",t),i.error({title:"Error:",message:"An error occurred while fetching images. Please try again later."})}finally{l.style.display="none"}})}
//# sourceMappingURL=commonHelpers.js.map
